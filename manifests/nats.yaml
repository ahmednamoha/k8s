apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: voip
data:
  nats.conf: |
    pid_file: "/var/run/nats/nats.pid"
    http: 8222

    authorization {
      user: $USER,
      password: $PASSWORD
    }

    cluster {
      name: $NAME
      listen: "0.0.0.0:6222"

      routes = [
        nats://nats-0.nats:6222
        nats://nats-1.nats:6222
        nats://nats-2.nats:6222
      ]

      connect_retries: 30
    }

    gateway {
      name: $NAME
      listen: "0.0.0.0:7522"
      connect_retries: 30
      advertise: $ADVERTISE

      gateways: [
        {name: "us-east1", urls: ["nats://nats-0.us-east1.nats.voip.svc.clusterset.local:7522", "nats://nats-1.us-east1.nats.voip.svc.clusterset.local:7522", "nats://nats-2.us-east1.nats.voip.svc.clusterset.local:7522"]},
        {name: "us-east4", urls: ["nats://nats-0.us-east4.nats.voip.svc.clusterset.local:7522", "nats://nats-1.us-east4.nats.voip.svc.clusterset.local:7522", "nats://nats-2.us-east4.nats.voip.svc.clusterset.local:7522"]},
        {name: "us-central1", urls: ["nats://nats-0.us-central1.nats.voip.svc.clusterset.local:7522", "nats://nats-1.us-central1.nats.voip.svc.clusterset.local:7522", "nats://nats-2.us-central1.nats.voip.svc.clusterset.local:7522"]}
      ]

    }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: voip
  labels:
    app: nats
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 3
  serviceName: "nats"
  template:
    metadata:
      labels:
        app: nats
    spec:
      # Common volumes for the containers
      volumes:
        - name: config-volume
          configMap:
            name: nats-config
        - name: pid
          emptyDir: {}

      # Required to be able to HUP signal and apply config reload
      # to the server without restarting the pod.
      shareProcessNamespace: true

      #################
      #  NATS Server  #
      #################
      terminationGracePeriodSeconds: 60
      containers:
        - name: nats
          image: nats:alpine
          ports:
            - containerPort: 4222
              name: client
              hostPort: 4222
            - containerPort: 7422
              name: leafnodes
              hostPort: 7422
            - containerPort: 6222
              name: cluster
            - containerPort: 8222
              name: monitor
            - containerPort: 7777
              name: metrics
          command:
            - "nats-server"
            - "--config"
            - "/etc/nats-config/nats.conf"
          env:
            - name: NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-details
                  key: clusterName
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: nats-url
                  key: user
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nats-url
                  key: pass
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ADVERTISE
              value: $(POD_NAME).$(NAME).nats.$(POD_NAMESPACE).svc.clusterset.local
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nats-config
            - name: pid
              mountPath: /var/run/nats

          # Liveness/Readiness probes against the monitoring
          #
          livenessProbe:
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            timeoutSeconds: 5

          # Gracefully stop NATS Server on pod deletion or image upgrade.
          #
          lifecycle:
            preStop:
              exec:
                # Using the alpine based NATS image, we add an extra sleep that is
                # the same amount as the terminationGracePeriodSeconds to allow
                # the NATS Server to gracefully terminate the client connections.
                #
                command: ["/bin/sh", "-c", "/nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60"]
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: voip
  labels:
    app: nats
spec:
  selector:
    app: nats
  clusterIP: None
  ports:
    - name: client
      port: 4222
    - name: cluster
      port: 6222
    - name: monitor
      port: 8222
    - name: metrics
      port: 7777
    - name: leafnodes
      port: 7422
    - name: gateways
      port: 7522
---
kind: ServiceExport
apiVersion: net.gke.io/v1
metadata:
  namespace: voip
  name: nats
---
apiVersion: v1
kind: Service
metadata:
  name: nats-metrics
  namespace: voip
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '7777'
spec:
  clusterIP: None
  selector:
    nats_cluster: nats
  ports:
    - name: metrics
      port: 7777
      protocol: TCP
